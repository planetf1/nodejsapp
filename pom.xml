<?xml version="1.0" encoding="UTF-8"?>

<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- Copyright Contributors to the ODPi Egeria project. -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


    <version>2.0-SNAPSHOT</version>

    <name>NodeJS example maven project</name>
    <description>
        Sandpit project to see how building a nodejs app with webpack might work in maven.
    </description>

    <modelVersion>4.0.0</modelVersion>

    <scm>
        <connection>scm:git:git://github.com/odpi/egeria.git</connection>
        <developerConnection>scm:git:ssh://github.com/odpi/egeria.git</developerConnection>
        <url>http://github.com/odpi/egeria/tree/master</url>
    </scm>

    <artifactId>nodejs-sample</artifactId>
    <groupId>com.acme.org</groupId>

    <packaging>war</packaging>

        <!-- Common properties - software versions are latest as of 3 June 2020 -->

    <properties>
                    <node.version>v12.18.0</node.version>
                    <npm.version>6.14.5</npm.version>
                    <frontend-plugin.version>1.10.0</frontend-plugin.version>
                    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.10.0</version>

                <executions>
                    <!-- Download node and npm locally -->
                    <!-- TODO: figure out where to store -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                    </execution>

                    <!-- Run npm to do a regular build which will download node_modules in package.json -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>-prefix my-app/ install</arguments>
                        </configuration>
                    </execution>

                    <!-- package for production mode using webpack ready for war file? -->
                    <execution>
                        <id>webpack-build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>-prefix my-app/ run build-prod</arguments>
                        </configuration>
                    </execution>
                </executions>

                <!-- common settings ie versions -->
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
                </configuration>


            </plugin>

                    <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <!-- Add frontend folder to war package -->
            <webResources>
                <resource>
                    <directory>my-app/dist</directory>
                </resource>
            </webResources>
        </configuration>
    </plugin>

        </plugins>
    </build>

</project>
